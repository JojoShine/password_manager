name: 构建桌面应用

on:
  push:
    tags:
      - 'v*'  # 当推送标签时触发（如 v1.0.0）
  workflow_dispatch:  # 手动触发

jobs:
  build-windows:
    name: 构建Windows版本
    runs-on: windows-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      
      - name: 设置Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'
          
      - name: 启用Windows桌面支持
        run: flutter config --enable-windows-desktop
        
      - name: 获取依赖
        run: flutter pub get
        
      - name: 构建Windows应用
        run: flutter build windows --release
        
      - name: 创建Windows安装包
        run: |
          mkdir windows-release
          xcopy "build\windows\x64\runner\Release\*" "windows-release\" /E /I /Y
          
      - name: 打包为ZIP
        run: |
          cd windows-release
          tar -czf ../PasswordManager-Windows.zip *
          
      - name: 上传Windows构建产物
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: PasswordManager-Windows.zip

  build-macos:
    name: 构建macOS版本
    runs-on: macos-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      
      - name: 设置Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'
          
      - name: 启用macOS桌面支持
        run: flutter config --enable-macos-desktop
        
      - name: 获取依赖
        run: flutter pub get
        
      - name: 构建macOS应用
        run: flutter build macos --release
        
      - name: 检查构建产物
        run: |
          echo "=== 检查构建产物 ==="
          echo "当前目录: $(pwd)"
          echo "列出 build 目录结构："
          find build -type d -name "*.app" 2>/dev/null || echo "未找到 .app 目录"
          echo "列出 Release 目录内容："
          ls -la build/macos/Build/Products/Release/ 2>/dev/null || echo "Release 目录不存在"
          echo "列出所有 .app 文件："
          find . -name "*.app" -type d 2>/dev/null || echo "整个项目中未找到 .app 文件"
        
      - name: 创建DMG安装包
        run: |
          echo "=== 创建 DMG 安装包 ==="
          
          # 查找 .app 文件
          APP_PATH=$(find build -name "*.app" -type d | head -1)
          
          if [ -n "$APP_PATH" ] && [ -d "$APP_PATH" ]; then
            echo "找到 app 文件: $APP_PATH"
            APP_NAME=$(basename "$APP_PATH" .app)
            echo "应用名称: $APP_NAME"
            
            # 创建 DMG
            echo "创建 DMG 文件..."
            hdiutil create -volname "PasswordManager" -srcfolder "$APP_PATH" -ov -format UDZO "PasswordManager-macOS.dmg"
            
            # 验证 DMG 文件
            if [ -f "PasswordManager-macOS.dmg" ]; then
              echo "DMG 文件创建成功!"
              ls -la PasswordManager-macOS.dmg
            else
              echo "DMG 文件创建失败!"
              exit 1
            fi
          else
            echo "错误: 未找到任何 .app 文件"
            echo "build 目录结构:"
            find build -type f -name "*" | head -20
            exit 1
          fi
          
      - name: 上传macOS构建产物
        uses: actions/upload-artifact@v4
        with:
          name: macos-release
          path: PasswordManager-macOS.dmg

  create-release:
    name: 创建发布
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        
      - name: 下载Windows构建产物
        uses: actions/download-artifact@v4
        with:
          name: windows-release
          path: ./artifacts
          
      - name: 下载macOS构建产物
        uses: actions/download-artifact@v4
        with:
          name: macos-release
          path: ./artifacts
          
      - name: 创建Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/PasswordManager-Windows.zip
            ./artifacts/PasswordManager-macOS.dmg
          body: |
            ## 📦 密码管理器 ${{ github.ref_name }}
            
            ### 🚀 功能特性
            - ✅ 密码管理和生成
            - ✅ 数据加密导入导出
            - ✅ 深色模式支持
            - ✅ 自定义字段支持
            - ✅ 分类管理
            
            ### 💾 下载说明
            - **Windows用户**: 下载 `PasswordManager-Windows.zip`，解压后运行 `password_manager.exe`
            - **macOS用户**: 下载 `PasswordManager-macOS.dmg`，双击安装
            
            ### 🔧 系统要求
            - Windows 10/11 (x64)
            - macOS 10.14+ (Intel/Apple Silicon)
            
            ---
            ⭐ 如果觉得好用，请给项目点个星！
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 